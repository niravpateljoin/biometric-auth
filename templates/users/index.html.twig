{% extends 'base.html.twig' %}
{% set active = 'users' %}
{% block title %} Users {% endblock %}

{% block body %}
    <div class="d-flex justify-content-end">
        <a href="{{ path('users_new') }}" class="btn btn-primary">New User</a>
    </div>
    <div class="card mt-3 mb-2">
        <div class="table-responsive rounded">
            <table class="table table-striped table-sm">
                <thead>
                <tr>
                    <th>{{ knp_pagination_sortable(users, 'Id', 'u.id') }}</th>
                    <th>{{ knp_pagination_sortable(users, 'Name', 'u.name') }}</th>
                    <th>E-mail</th>
                    <th>Enabled</th>
                    <th>{{ knp_pagination_sortable(users, 'Role', 'u.role') }}</th>
                    <th>{{ knp_pagination_sortable(users, 'Time Created', 'u.createdTime') }}</th>
                    <th class="text-end">Action</th>
                </tr>
                </thead>
                <tbody class="table-group-divider">
                {% set userRole = enum("\\App\\Entity\\Enum\\UserRole") %}
                {% for user in users %}
                    {% include 'users/row.html.twig' %}
                {% else %}
                    <tr>
                        <td colspan="13">No records found.</td>
                    </tr>
                {% endfor %}
                </tbody>
            </table>
        </div>
        <input type="hidden" id="user_delete_csrf" value="{{ csrf_token("delete_user") }}">
        {{ include('paginator/pagination_card_footer.html.twig', {'knp_result_set': users}) }}
    </div>

    <script>
        document.addEventListener('DOMContentLoaded', () => {
            let deleteUserBtns = document.querySelectorAll('.delete-user-btn');
            deleteUserBtns.forEach(btn => {
                btn.addEventListener('click', (e) => {
                    Swal.fire({
                        title: "Are you sure?",
                        text: "You won't be able to revert this!",
                        icon: "warning",
                        showCancelButton: true,
                        confirmButtonColor: "#3085d6",
                        cancelButtonColor: "#d33",
                        confirmButtonText: "Yes, delete it!"
                    }).then((result) => {
                        if (result.isConfirmed) {
                            let csrfToken = document.getElementById('user_delete_csrf').value;
                            let userId = btn.getAttribute('data-user-id');
                            let deleteUserURL = '{{ path('users_delete', {'id': 0}) }}'.replace('0', userId);
                            let formData = new FormData();
                            formData.append('_token', csrfToken);

                            fetch(deleteUserURL, {
                                method: 'POST',
                                body: formData,
                            }).then((res) => {
                                return res.json();
                            }).then(response => {
                                if (response.status) {
                                    btn.closest('tr').remove();
                                    Swal.fire({
                                        title: "Deleted!",
                                        text: "User has been deleted.",
                                        icon: "success"
                                    });
                                } else {
                                    Swal.fire({
                                        title: "Error!",
                                        text: response.errorMessage,
                                        icon: "error"
                                    });
                                }
                            });
                        } else {
                            Swal.fire("Cancelled", "Your user is safe :)", "error");
                        }
                    });
                });
            });
        });
    </script>
{% endblock %}
